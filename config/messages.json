{
  "en": {
    "welcome": "Welcome to RAG!",
    "loading_model": "Loading model '{model_name}'...",
    "downloading_model": "Downloading and loading model '{model_name}'...",
    "all_models_loaded": "All models have been successfully loaded!",
    "loading_models_spinner": "Loading models... This may take a moment.",
    "bearer_token_error": "Failed to obtain Bearer Token. Status code: {status_code}",
    "renewing_token": "Renewing Bearer Token...",
    "token_renewal_success": "Bearer Token has been successfully renewed.",
    "token_renewal_failure": "Failed to renew Bearer Token.",
    "api_key_not_set": "API Key is not set. Unable to renew Bearer Token.",
    "collection_description": "Document vectors for RAG",
    "collection_created": "Collection '{collection_name}' has been successfully created and indexed.",
    "index_added": "Index has been added to collection '{collection_name}'.",
    "index_loaded": "Index of collection '{collection_name}' has been loaded.",
    "milvus_connected": "Connected to Milvus.",
    "milvus_connection_failed_log_with_error": "[error]: Failed to connect to Milvus: {error}",
    "file_uploaded_vectorized": "File '{file_name}' has been successfully uploaded and vectorized.",
    "milvus_ingest_success": "{chunk_count} chunks from file '{file_name}' have been successfully ingested into Milvus.",
    "milvus_ingest_error": "Error occurred during Milvus ingest: {error}",
    "login_title": "watsonx.ai: API Key Registration",
    "login_instruction": "Please enter your :green[API Key] and :green[Project ID]. (The required Bearer Token will be automatically obtained using the API Key.)",
    "select_location": "Select Location",
    "url": "URL",
    "uri_method": "URI Method",
    "api_key": "API Key",
    "generate_bearer_token": "Generate Bearer Token",
    "getting_bearer_token": "Getting Bearer Token...",
    "bearer_token_success": "Successfully obtained Bearer Token.",
    "bearer_token_failure": "Failed to obtain Bearer Token.",
    "bearer_token": "Bearer Token",
    "project_id": "Project ID",
    "space_id": "Space ID",
    "space_id_placeholder": "(Optional) Enter if deployed to space.",
    "enter": "Enter",
    "auth_success": "Authentication successful! Moving to the main page.",
    "fill_all_fields": "Please fill in all fields.",
    "milvus_connection_failed_log": "Failed to connect to Milvus. Please check your Milvus connection information.",
    "collection_exists": "Collection '{collection_name}' already exists.",
    "milvus_connection_success": "Milvus connection successful. Collection '{collection_name}' can be created.",
    "connection_error": "Error occurred during connection: {error}",
    "watsonx_general_connection_success": "WatsonX API connection successful",
    "watsonx_request_failed": "WatsonX API request failed. Status code: {status_code}",
    "response_content": "Response content: {content}",
    "watsonx_request_error": "Error occurred during WatsonX API request: {error}",
    "related_document_content": "Related document content:",
    "all_files": "All files",
    "file_content_format": "File: {file}\nContent: {content}\n\n",
    "header_title": "RAG with watsonx.ai",
    "view_logs": "View Logs",
    "description_text": "This is a simple RAG demo/tester tool using watsonx.ai. <span style='color: #4B9FE1;'>First, please upload a file.</span>",
    "select_file_to_search": "Select file to search",
    "using_milvus": "Using Milvus: Searching in all files",
    "milvus_disconnected": "Milvus connection lost. Attempting to reconnect.",
    "milvus_connection_failed_search": "Unable to search due to Milvus connection failure.",
    "no_search_results": "No search results found.",
    "no_search_results_file": "No search results",
    "missing_info_in_result": "Missing information in search result: {hit}",
    "no_valid_file_info": "No valid file information found in search results.",
    "milvus_search_error": "Error occurred during Milvus search: {error}",
    "search_error_occurred": "An error occurred during the search.",
    "upload_file_first": "Please upload a file first.",
    "complete_milvus_setup": "Please complete the Milvus setup first.",
    "enter_message": "Enter your message...",
    "user_log": "'[user] {prompt}'",
    "full_prompt_log": "'[full prompt] START ----------'\n{prompt}'[full prompt] END ----------'\n",
    "api_call_failed": "API call failed: {status}",
    "error_occurred": "An error occurred: {error}",
    "ai_response_log": "'[AI]: {response}'",
    "document_upload": "Document Upload",
    "document_upload_help": "Upload documents that contain answers to questions.",
    "file_types": "PDF, Word, Excel, PowerPoint",
    "uploaded_files": "Uploaded Files",
    "file_item": ":blue[- {filename}]",
    "milvus_stored_files": ":blue[Files stored in Milvus]",
    "user_prompt": "User Prompt",
    "user_prompt_help": "Set the prompt for RAG when the user asks a question. You can use {context} and {user_input} as variables.",
    "click_expand_collapse": "Click to expand/collapse",
    "prompt_template": "Prompt Template",
    "llm_model_settings": "LLM Model Settings",
    "llm_model_settings_help": "Configure the model. By default, models capable of Korean are available for RAG.",
    "model_id": "Model ID",
    "decoding_method": "Decoding Method",
    "max_new_tokens": "Max New Tokens",
    "min_new_tokens": "Min New Tokens",
    "temperature": "Temperature",
    "top_k": "Top K",
    "top_p": "Top P",
    "vector_search_settings": "Vector Search Settings",
    "vector_search_settings_help": "Select the model, chunk size, and overlap size for vector search.",
    "vector_search_method": "Vector Search Method: {method}",
    "embedding_model": "Embedding Model",
    "chunk_size": "Chunk Size",
    "overlap_size": "Overlap Size",
    "view_files_and_prompt": "üìÅ View files and prompt used in search",
    "files_used_in_search": "Files used in search",
    "prompt": "Prompt",
    "full_prompt": "Full Prompt",
    "milvus_collection_init_failed": "Failed to initialize Milvus collection: {error}",
    "user_prompt_full": "You are an agent named 'Abum' who answers users' questions based on [Background Knowledge].\nPlease respond as if you're having a conversation, always being friendly and polite.\nIf there's no information in the [Background Knowledge] about the question, please mention that you can't answer due to lack of referenced background knowledge, and never provide uncertain information.\nIf the question is a simple greeting, introduce yourself and greet briefly.\n\n[Background Knowledge]\n{context}\n\n[User Question] : {user_input}\n[Answer] :",
    "vectorization_status_title": "{method} Vectorization Status Summary",
    "total_files": " * Total number of files: {count}",
    "total_chunks": " * Total number of chunks: {count}",
    "total_entities": " * Total number of entities: {count}",
    "unique_files": " * Number of unique files: {count}",
    "vectorized_files": " * Vectorized files:",
    "status_separator": "##############################",
    "model_loaded": "Model loaded",
    "overall_progress": "Overall progress",
    "model_loading_progress": "<br><br><br><h3>Model Loading Progress</h3>",
    "select_vector_search_method": "Select Vector Search Method",
    "milvus_connection_failed": "Failed to connect to Milvus: {error}",
    "select_login_method": "Select Login Method",
    "watsonx_discovery_config_page": "watsonx Discovery Configuration",
    "test_watsonx_discovery_connection": "Test watsonx Discovery Connection",
    "watsonx_discovery_connection_success": "watsonx Discovery Connection Successful",
    "watsonx_discovery_connection_failed": "watsonx Discovery Connection Failed",
    "watsonx_discovery_test_start": "Starting watsonx Discovery connection test...",
    "indexing_test_document": "Indexing test document...",
    "document_indexing_success": "Document indexing successful. Document ID: {doc_id}",
    "document_indexing_error": "Error occurred during document indexing: {error}",
    "checking_document_processing": "Checking document processing results...",
    "ml_field_found": "ML field found. Analyzing document...",
    "ml_field_analysis_result": "ML field analysis result:",
    "document_processing_timeout": "Document processing timeout: {error}",
    "watsonx_discovery_test_error": "Error occurred during watsonx Discovery test: {error}",
    "deleting_test_document": "Deleting test document...",
    "document_deletion_success": "Document ID {doc_id} has been successfully deleted.",
    "document_deletion_error": "Error occurred while deleting document: {error}",
    "document_deletion_exception": "Exception occurred while deleting document: {error}",
    "document_wait_error": "Error occurred while waiting for document: {error}",
    "document_processing_wait": "Waiting for document processing... (Field: {field}, Attempt: {attempt}/{max_attempts})",
    "document_field_found": "Found {field} field in the document.",
    "ml_field_not_found": "ML field not found.",
    "watsonx_discovery_server_url": "watsonx Discovery Server URL",
    "watsonx_discovery_api_key": "watsonx Discovery API Key",
    "watsonx_discovery_pem_file": "PEM File (Optional)",
    "watsonx_discovery_index_name": "Index Name",
    "watsonx_discovery_text_expanding": "Enable Text Expanding",
    "watsonx_discovery_index_exists": "Index '{index_name}' exists.",
    "watsonx_discovery_index_not_found": "Index '{index_name}' not found. Please check the index name and try again.",
    "watsonx_discovery_ml_pipeline_exists": "ML pipeline '{pipeline_name}' exists and is properly configured.",
    "watsonx_discovery_ml_pipeline_not_found": "ML pipeline '{pipeline_name}' exists but does not contain ML processors.",
    "watsonx_discovery_pipeline_not_found": "Pipeline '{pipeline_name}' not found. Please check the pipeline configuration.",
    "watsonx_discovery_content_ml_mapping_exists": "ML field mapping for 'content' field exists.",
    "watsonx_discovery_content_ml_mapping_not_found": "ML field mapping for 'content' field not found. Please check the index mapping configuration.",
    "milvus_status_error": "Error occurred while checking Milvus status: {error}",
    "document_indexing_exception": "Exception occurred during document indexing: {error}",
    "multiple_models_found": "Multiple models found. Please select a model:",
    "select_model": "Select a model",
    "selected_model_info": "Selected model - Type: {type}, ID: {id}, Field: {field}",
    "model_ids_found": "Found model IDs: {ids}",
    "model_info_found": "Found model - Type: {type}, ID: {id}",
    "no_model_selected": "No model has been selected.",
    "single_model_found": "Single model found - Type: {type}, ID: {id}",
    "no_models_found": "No models were found.",
    "connection_failed_log": "Fail to connect to the external vector server. Please, check the settings",
    "test_milvus_connection": "Test Milvus Connection",
    "faiss_status": "FAISS Vector Search Status",
    "chunks_per_file": "Number of chunks per file:",
    "file_chunks": "- {file}: {count} chunks",
    "faiss_index_info": "FAISS Index Information:",
    "index_size": "Index size: {size}",
    "index_dimension": "Index dimension: {dimension}",
    "faiss_index_not_created": "FAISS index has not been created yet.",
    "faiss_data_not_found": "Error: FAISS related data not found. {error}",
    "faiss_logging_error": "Error occurred while logging FAISS status: {error}",
    "collection_details": "Detailed information of collection '{name}':",
    "schema_info": "1. Schema Information:",
    "description": "Description: {desc}",
    "fields": "Fields:",
    "field_info": "- Name: {name}, Type: {type}, Is Primary: {is_primary}",
    "basic_info": "2. Basic Information:",
    "name": "Name: {name}",
    "is_empty": "Is Empty: {empty}",
    "entity_count": "Number of Entities: {count}",
    "primary_key_info": "3. Primary Key Information:",
    "no_primary_key": "No primary key",
    "partition_info": "4. Partition Information:",
    "partition_details": "- Name: {name}, Description: {desc}",
    "index_info": "5. Index Information:",
    "field_name": "Field Name: {name}",
    "index_name": "Index Name: {name}",
    "index_type": "Index Type: {type}",
    "metric_type": "Metric Type: {type}",
    "additional_params": "Additional Parameters: {params}",
    "no_index": "No index",
    "load_state": "6. Collection Load State: {state}",
    "faiss_index_initialized": "FAISS index initialized with dimension: {dimension}",
    "vectors_added_to_faiss": "{count} vectors added to FAISS index for file: {file_name}",
    "faiss_index_empty": "FAISS index is empty or not initialized",
    "file_not_found_in_index": "File not found in FAISS index: {file_name}",
    "faiss_file_specific_search_not_supported": "File-specific search is not directly supported in FAISS. Performing a general search and filtering results.",
    "processing_file": "Processing file: {file_name}",
    "extracted_text_length": "Extracted text length: {length}",
    "total_words_in_document": "Total words in document: {word_count}",
    "number_of_chunks_created": "Number of chunks created: {chunk_count}",
    "number_of_chunks_after_splitting": "Number of chunks after splitting: {chunk_count}",
    "number_of_chunk_vectors": "Number of chunk vectors: {vector_count}",
    "extracted_text_sample": "Extracted text from PDF (first 100 chars): {text_sample}",
    "faiss_index_not_initialized": "FAISS index is not initialized",
    "total_vectors_in_index": "Total vectors in FAISS index: {count}",
    "vector_dimension": "Vector dimension: {dimension}",
    "number_of_clusters": "Number of clusters (for IVF indexes): {count}",
    "unique_files_in_index": "Number of unique files in index: {count}",
    "faiss_index_type": "FAISS index type: {type}",
    "index_flat_l2_info": "This is a flat index using L2 distance",
    "index_ivf_flat_info": "This is an IVF flat index with {nlist} lists and nprobe set to {nprobe}",
    "index_ivf_pq_info": "This is an IVF PQ index with {nlist} lists, nprobe set to {nprobe}, {M} subquantizers, and {nbits} bits per subquantizer",
    "estimated_memory_usage": "Estimated memory usage: {usage}",
    "no_text_extracted": "No text could be extracted from the file: {file_name}",
    "file_processing_failed": "Failed to process file: {file_name}",
    "watsonx_discovery_config_info": "Before proceeding, please ensure you have completed the following steps in watsonx Discovery:\n\n1. Set up an ML pipeline:\n\n   ‚Ä¢ Create a new ML pipeline or use an existing one.\n\n   ‚Ä¢ Ensure the pipeline is configured to process your documents.\n\n2. Configure field mapping:\n\n   ‚Ä¢ In your pipeline, map the 'content' field of your documents.\n\n   ‚Ä¢ This mapping is crucial for the ML model to process the correct data.\n\n3. Verify pipeline operation:\n\n   ‚Ä¢ Run a test document through your pipeline to ensure it's working correctly.\n\n   ‚Ä¢ Check that the 'content' field is being properly processed and enriched.\n\nOnce these steps are completed, you can proceed with the configuration in this application.",
    "embedding_model_info": "Please select an embedding model. Note that for watsonx Discovery, the embedding model is not used within the app.",
    "watsonx_discovery_doc_count": "Total documents in index: {count}",
    "watsonx_discovery_fields": "Index fields:",
    "watsonx_discovery_status_error": "Error getting Watson Discovery status: {error}",
    "bulk_indexing_success": "File '{file_name}' has been successfully indexed.",
    "watsonx_discovery_file_counts": "Document counts per file:",
    "watsonx_discovery_client_error": "Error with Watson Discovery client: {error}",
    "watsonx_discovery_config_error": "Error in Watson Discovery configuration: {error}",
    "watsonx_discovery_search_error": "An error occurred while searching in Watson Discovery.",
    "select_login_mode": "Select login mode",
    "login_mode_general": "General",
    "login_mode_prompt_template": "Prompt Template",
    "prompt_template_login_title": "Prompt Template Login",
    "stream_endpoint_url": "Stream Endpoint URL",
    "vector_search_params": "Vector Search Parameters(Variable Name)",
    "user_input_params": "User Input Parameters(Variable Name)",
    "pipeline_ml_field_log": "\nPipeline: {pipeline_name}",
    "elser_model_ml_field_log": "ELSER Model (text_expanding):",
    "model_id_ml_field_log": "  Model ID: {model_id}",
    "keyword_count_ml_field_log": "  Keyword Count: {count}",
    "top_10_keywords_ml_field_log": "  Top 10 Keywords:",
    "keyword_score_ml_field_log": "    {keyword}: {score:.4f}",
    "embedding_model_ml_field_log": "Embedding Model (text_embedding):",
    "vector_dimension_ml_field_log": "  Vector Dimension: {dimension}",
    "vector_sample_ml_field_log": "  Vector Sample (first 5 values):",
    "vector_value_ml_field_log": "    {value:.6f}",
    "unknown_model_type_ml_field_log": "Unknown Model Type:",
    "predicted_value_type_ml_field_log": "  Predicted Value Type: {value_type}",
    "no_model_info_ml_field_log": "\nNo model information found.",
    "ml_field_content_ml_field_log": "ML Field Content: {content}",
    "debug_model_info_ml_field_log": "Debug - model_info: {model_info}",
    "pem_file_deletion_error": "Error occurred while deleting PEM file: {error}",
    "pem_file_uploaded_and_saved": "PEM file has been uploaded and saved.",
    "unsupported_file_format": "Unsupported file format: {format}",
    "text_extraction_error": "Error extracting text from {file_name}: {error}",
    "pdf_page_extraction_error": "Error extracting text from PDF page {page_num}: {error}",
    "pdf_reading_error": "Error reading PDF file: {error}",
    "docx_reading_error": "Error reading DOCX file: {error}",
    "excel_reading_error": "Error reading Excel file: {error}",
    "powerpoint_reading_error": "Error reading PowerPoint file: {error}",
    "image_reading_error": "Error reading image file: {error}",
    "missing_settings": "The following settings are missing or invalid: {settings}",
    "all_settings_complete": "All settings are complete and valid.",
    "apikey": "API Key",
    "bearer": "Bearer Token",
    "selected_model": "Selected Model",
    "valid_chunk_size": "Valid Chunk Size",
    "valid_overlap_size": "Valid Overlap Size",
    "overlap_size_smaller": "Overlap Size smaller than Chunk Size",
    "watsonx_ai_availability": "WatsonX.AI Availability",
    "milvus_connection_test": "Milvus Connection Test",
    "watson_discovery_server_url": "Watson Discovery Server URL",
    "watson_discovery_api_key": "Watson Discovery API Key",
    "watson_discovery_index_name": "Watson Discovery Index Name",
    "watson_discovery_text_embedding_type": "Watson Discovery Text Embedding Type",
    "watson_discovery_connection_test": "Watson Discovery Connection Test",
    "valid_vector_search_method": "Valid Vector Search Method",
    "watsonx_general_request_failed": "WatsonX.AI general mode request failed with status code: {status_code}",
    "watsonx_general_request_error": "Error in WatsonX.AI general mode request: {error}",
    "watsonx_prompt_template_connection_success": "WatsonX.AI prompt template mode connection successful",
    "watsonx_prompt_template_request_failed": "WatsonX.AI prompt template mode request failed with status code: {status_code}",
    "watsonx_prompt_template_request_error": "Error in WatsonX.AI prompt template mode request: {error}",
    "format_error": "Format error: Key {missing_key} is missing for message '{message_key}'",
    "message_not_found": "Message not found: Language '{lang}', Key '{message_key}'",
    "milvus_insert_count_mismatch": "Number of inserted entities does not match expected. Expected: {expected}, Actual: {actual}",
    "select_option": "Select an option"
  },
  "ko": {
    "welcome": "RAG Îç∞Î™®Ïóê Ïò§Ïã†Í≤ÉÏùÑ ÌôòÏòÅÌï©ÎãàÎã§.",
    "loading_model": "Î™®Îç∏ '{model_name}'ÏùÑ(Î•º) Î°úÎìúÌïòÎäî Ï§ë...",
    "downloading_model": "Î™®Îç∏ '{model_name}'ÏùÑ(Î•º) Îã§Ïö¥Î°úÎìú Î∞è Î°úÎìúÌïòÎäî Ï§ë...",
    "all_models_loaded": "Î™®Îì† Î™®Îç∏ÏùÑ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Î°úÎìúÌñàÏäµÎãàÎã§!",
    "loading_models_spinner": "Î™®Îç∏ÏùÑ Î°úÎî© Ï§ëÏûÖÎãàÎã§... Ïû†ÏãúÎßå Í∏∞Îã§Î†§Ï£ºÏÑ∏Ïöî.",
    "bearer_token_error": "Bearer TokenÏùÑ ÏñªÎäîÎç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§. ÏÉÅÌÉú ÏΩîÎìú: {status_code}",
    "renewing_token": "Bearer TokenÏùÑ Í∞±Ïã†ÌïòÎäî Ï§ë...",
    "token_renewal_success": "Bearer TokenÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Í∞±Ïã†ÎêòÏóàÏäµÎãàÎã§.",
    "token_renewal_failure": "Bearer Token Í∞±Ïã†Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.",
    "api_key_not_set": "API KeyÍ∞Ä ÏÑ§Ï†ïÎêòÏñ¥ ÏûàÏßÄ ÏïäÏïÑ Bearer TokenÏùÑ Í∞±Ïã†Ìï† Ïàò ÏóÜÏäµÎãàÎã§.",
    "collection_description": "RAGÎ•º ÏúÑÌïú Î¨∏ÏÑú Î≤°ÌÑ∞",
    "collection_created": "Ïª¨Î†âÏÖò '{collection_name}'Ïù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏÉùÏÑ±ÎêòÍ≥† Ïù∏Îç±Ïä§Í∞Ä Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§.",
    "index_added": "Ïª¨Î†âÏÖò '{collection_name}'Ïóê Ïù∏Îç±Ïä§Í∞Ä Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§.",
    "index_loaded": "Ïª¨Î†âÏÖò '{collection_name}'Ïùò Ïù∏Îç±Ïä§Í∞Ä Î°úÎìúÎêòÏóàÏäµÎãàÎã§.",
    "milvus_connected": "MilvusÏóê Ïó∞Í≤∞ÎêòÏóàÏäµÎãàÎã§.",
    "milvus_connection_failed_log_with_error": "[error]: Milvus Ïó∞Í≤∞ Ïã§Ìå®: {error}",
    "file_uploaded_vectorized": "'{file_name}' ÌååÏùºÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏóÖÎ°úÎìúÎêòÍ≥† Î≤°ÌÑ∞ÌôîÎêòÏóàÏäµÎãàÎã§.",
    "milvus_ingest_success": "'{file_name}' ÌååÏùºÏùò {chunk_count}Í∞ú Ï≤≠ÌÅ¨Í∞Ä MilvusÏóê ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ingestÎêòÏóàÏäµÎãàÎã§.",
    "milvus_ingest_error": "Milvus ingest Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "login_title": "watsonx.ai: API ÌÇ§ Îì±Î°ù",
    "login_instruction": ":green[API Key]ÏôÄ :green[Project ID]Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî. (ÌïÑÏöîÌïú Bearer TokenÏùÄ API KeyÏóê ÏùòÌï¥ ÌöçÎìùÌï©ÎãàÎã§.)",
    "select_location": "ÏúÑÏπò ÏÑ†ÌÉù",
    "url": "URL",
    "uri_method": "URI Method",
    "api_key": "API Key",
    "generate_bearer_token": "Bearer Token ÏÉùÏÑ±",
    "getting_bearer_token": "Bearer TokenÏùÑ ÏñªÎäî Ï§ë...",
    "bearer_token_success": "Bearer TokenÏùÑ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏñªÏóàÏäµÎãàÎã§.",
    "bearer_token_failure": "Bearer TokenÏùÑ ÏñªÎäîÎç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§.",
    "bearer_token": "Bearer Token",
    "project_id": "Project ID",
    "space_id": "Space ID",
    "space_id_placeholder": "(ÏòµÏÖò) ÎßåÏïΩ spaceÏóê deployÌïú Í≤ΩÏö∞ ÏûÖÎ†•ÌïòÏÑ∏Ïöî.",
    "enter": "Îì§Ïñ¥Í∞ÄÍ∏∞",
    "auth_success": "Ïù∏Ï¶ù ÏÑ±Í≥µ! Î©îÏù∏ ÌéòÏù¥ÏßÄÎ°ú Ïù¥ÎèôÌï©ÎãàÎã§.",
    "fill_all_fields": "Î™®Îì† ÌïÑÎìúÎ•º ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî.",
    "milvus_connection_failed_log": "Milvus Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§. Ïò¨Î∞îÎ•∏ Milvus Ïó∞Í≤∞ Ï†ïÎ≥¥Î•º ÌôïÏù∏Ìï¥ Ï£ºÏÑ∏Ïöî.",
    "collection_exists": "Ïª¨Î†âÏÖò '{collection_name}'Ïù¥(Í∞Ä) Ïù¥ÎØ∏ Ï°¥Ïû¨Ìï©ÎãàÎã§.",
    "milvus_connection_success": "Milvus Ïó∞Í≤∞ ÏÑ±Í≥µ. Ïª¨Î†âÏÖò '{collection_name}'ÏùÑ(Î•º) ÏÉùÏÑ±Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
    "connection_error": "Ïó∞Í≤∞ Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "watsonx_general_connection_success": "WatsonX API Ïó∞Í≤∞ ÏÑ±Í≥µ",
    "watsonx_request_failed": "WatsonX API ÏöîÏ≤≠ Ïã§Ìå®. ÏÉÅÌÉú ÏΩîÎìú: {status_code}",
    "response_content": "ÏùëÎãµ ÎÇ¥Ïö©: {content}",
    "watsonx_request_error": "WatsonX API ÏöîÏ≤≠ Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "related_document_content": "Í¥ÄÎ†® Î¨∏ÏÑú ÎÇ¥Ïö©:",
    "all_files": "Ï†ÑÏ≤¥",
    "file_content_format": "ÌååÏùº: {file}\nÎÇ¥Ïö©: {content}\n\n",
    "header_title": "RAG with watsonx.ai",
    "view_logs": "Î°úÍ∑∏ Î≥¥Í∏∞",
    "description_text": "watsonx.aiÎ•º Ïù¥Ïö©Ìïú Í∞ÑÎã®Ìïú RAG Îç∞Î™®/ÌÖåÏä§ÌÑ∞ ÎèÑÍµ¨ÏûÖÎãàÎã§. <span style='color: #4B9FE1;'>Î®ºÏ†Ä, ÌååÏùºÏùÑ ÏóÖÎ°úÎìú ÌïòÏÑ∏Ïöî.</span>",
    "select_file_to_search": "Í≤ÄÏÉâÌï† ÌååÏùº ÏÑ†ÌÉù",
    "using_milvus": "Milvus ÏÇ¨Ïö© Ï§ë: Î™®Îì† ÌååÏùºÏóêÏÑú Í≤ÄÏÉâ",
    "milvus_disconnected": "Milvus Ïó∞Í≤∞Ïù¥ ÎÅäÏñ¥Ï°åÏäµÎãàÎã§. Ïû¨Ïó∞Í≤∞ÏùÑ ÏãúÎèÑÌï©ÎãàÎã§.",
    "milvus_connection_failed_search": "Milvus Ïó∞Í≤∞ Ïã§Ìå®Î°ú Í≤ÄÏÉâÌï† Ïàò ÏóÜÏäµÎãàÎã§.",
    "no_search_results": "Í≤ÄÏÉâ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§.",
    "no_search_results_file": "Í≤ÄÏÉâ Í≤∞Í≥º ÏóÜÏùå",
    "missing_info_in_result": "Í≤ÄÏÉâ Í≤∞Í≥ºÏóê ÎàÑÎùΩÎêú Ï†ïÎ≥¥Í∞Ä ÏûàÏäµÎãàÎã§: {hit}",
    "no_valid_file_info": "Í≤ÄÏÉâ Í≤∞Í≥ºÏóêÏÑú Ïú†Ìö®Ìïú ÌååÏùº Ï†ïÎ≥¥Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.",
    "milvus_search_error": "Milvus Í≤ÄÏÉâ Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "search_error_occurred": "Í≤ÄÏÉâ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.",
    "upload_file_first": "ÌååÏùº ÏóÖÎ°úÎìúÎ•º Î®ºÏ†Ä ÏßÑÌñâÌïòÏÑ∏Ïöî.",
    "complete_milvus_setup": "Milvus ÏÑ§Ï†ïÏùÑ Î®ºÏ†Ä ÏôÑÎ£åÌï¥Ï£ºÏÑ∏Ïöî.",
    "enter_message": "Î©îÏãúÏßÄÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî...",
    "user_log": "'[user] {prompt}'",
    "full_prompt_log": "'[full prompt] START ----------'\n{prompt}'[full prompt] END ----------'\n",
    "api_call_failed": "API Ìò∏Ï∂ú Ïã§Ìå®: {status}",
    "error_occurred": "Ïò§Î•ò Î∞úÏÉù: {error}",
    "ai_response_log": "'[AI]: {response}'",
    "document_upload": "Î¨∏ÏÑú ÏóÖÎ°úÎìú",
    "document_upload_help": "ÏßàÎ¨∏Ïóê ÎåÄÌïú ÎãµÎ≥ÄÏùÑ Ìè¨Ìï®ÌïòÎäî Î¨∏ÏÑúÎ•º ÏóÖÎ°úÎìúÌï©ÎãàÎã§.",
    "file_types": "PDF, Word, Excel, PowerPoint",
    "uploaded_files": "ÏóÖÎ°úÎìúÎêú ÌååÏùº",
    "file_item": ":blue[- {filename}]",
    "milvus_stored_files": ":blue[MilvusÏóê Ï†ÄÏû•Îêú ÌååÏùºÎì§]",
    "user_prompt": "ÏÇ¨Ïö©Ïûê ÌîÑÎ°¨ÌîÑÌä∏",
    "user_prompt_help": "ÏÇ¨Ïö©ÏûêÍ∞Ä ÏßàÏùòÌñàÏùÑÎïå, RAGÎ•º ÏúÑÌïú ÌîÑÎ°¨ÌîÑÌä∏Î•º ÏÑ§Ï†ïÌï©ÎãàÎã§. {context}, {user_input}ÏùÑ Î≥ÄÏàòÎ°ú ÏÇ¨Ïö©ÌïòÏã§ Ïàò ÏûàÏäµÎãàÎã§.",
    "click_expand_collapse": "ÌÅ¥Î¶≠ÌïòÏó¨ ÌôïÏû•/Ï∂ïÏÜå",
    "prompt_template": "ÌîÑÎ°¨ÌîÑÌä∏ ÌÖúÌîåÎ¶ø",
    "llm_model_settings": "LLM Î™®Îç∏ ÏÑ§Ï†ï",
    "llm_model_settings_help": "Î™®Îç∏ÏùÑ ÏÑ§Ï†ïÌï©ÎãàÎã§. RAGÎ•º ÏúÑÌï¥ÏÑú Í∏∞Î≥∏Ï†ÅÏúºÎ°ú ÌïúÍµ≠Ïñ¥Í∞Ä Í∞ÄÎä•Ìïú Î™®Îç∏Ïù¥ ÏÑ†ÌÉù Í∞ÄÎä•Ìï©ÎãàÎã§.",
    "model_id": "Î™®Îç∏ ID",
    "decoding_method": "ÎîîÏΩîÎî© Î∞©Î≤ï",
    "max_new_tokens": "ÏµúÎåÄ ÏÉà ÌÜ†ÌÅ∞ Ïàò",
    "min_new_tokens": "ÏµúÏÜå ÏÉà ÌÜ†ÌÅ∞ Ïàò",
    "temperature": "Ïò®ÎèÑ",
    "top_k": "ÏÉÅÏúÑ K",
    "top_p": "ÏÉÅÏúÑ P",
    "vector_search_settings": "Î≤°ÌÑ∞ Í≤ÄÏÉâ ÏÑ§Ï†ï",
    "vector_search_settings_help": "Î≤°ÌÑ∞ Í≤ÄÏÉâÏùò Î™®Îç∏Í≥º chunk size, overlap sizeÎ•º ÏÑ†ÌÉùÌï©ÎãàÎã§.",
    "vector_search_method": "Î≤°ÌÑ∞ Í≤ÄÏÉâ Î∞©Î≤ï: {method}",
    "embedding_model": "ÏûÑÎ≤†Îî© Î™®Îç∏",
    "chunk_size": "Ï≤≠ÌÅ¨ ÌÅ¨Í∏∞",
    "overlap_size": "Ïò§Î≤ÑÎû© ÌÅ¨Í∏∞",
    "view_files_and_prompt": "üìÅ Í≤ÄÏÉâÏóê ÏÇ¨Ïö©Îêú ÌååÏùº Î∞è ÌîÑÎ°¨ÌîÑÌä∏ Î≥¥Í∏∞",
    "files_used_in_search": "Í≤ÄÏÉâÏóê ÏÇ¨Ïö©Îêú ÌååÏùº",
    "prompt": "ÌîÑÎ°¨ÌîÑÌä∏",
    "full_prompt": "Ï†ÑÏ≤¥ ÌîÑÎ°¨ÌîÑÌä∏",
    "milvus_collection_init_failed": "Milvus Ïª¨Î†âÏÖò Ï¥àÍ∏∞Ìôî Ïã§Ìå®: {error}",
    "user_prompt_full": "ÎãπÏã†ÏùÄ ÏÇ¨Ïö©ÏûêÏùò ÏßàÎ¨∏Ïóê [Î∞∞Í≤ΩÏßÄÏãù]Ïóê Í∏∞Î∞òÌï¥ÏÑú ÎãµÎ≥ÄÌï¥Ï£ºÎäî ÏóêÏù¥Ï†ÑÌä∏ 'ÏïÑÎ≤î'ÏûÖÎãàÎã§.\nÎåÄÌôîÌïòÎìØÏù¥ ÎãµÎ≥ÄÌï¥Ï£ºÍ≥† Ìï≠ÏÉÅ ÏπúÏ†àÌïòÍ≥†, Ï†ïÏ§ëÍ≤å ÎãµÎ≥ÄÌï¥ Ï£ºÏãúÍ∏∞Î∞îÎûçÎãàÎã§.\n[Î∞∞Í≤ΩÏßÄÏãù]Ïóê ÏóÜÎäî ÎÇ¥Ïö©ÏùÄ Ï∞∏Ï°∞Îêú Î∞∞Í≤ΩÏßÄÏãùÏù¥ ÏóÜÏñ¥ÏÑú ÎãµÎ≥ÄÏù¥ Ïñ¥Î†µÎã§Í≥† ÎßêÏîÄÌï¥Ï£ºÏãúÍ≥†, Ï†àÎåÄ Î∂àÌôïÏã§Ìïú ÎÇ¥Ïö©ÏùÄ ÎãµÎ≥ÄÌïòÏßÄ ÎßàÏÑ∏Ïöî.\nÏßàÎ¨∏Ïù¥ Îã®ÏàúÌïú Ïù∏ÏÇ¨Ïóê ÎåÄÌïú Í≤ÉÏù¥Î©¥ ÎãπÏã†ÏùÑ ÏÜåÍ∞úÌïòÍ≥† Í∞ÑÎã®Ìûà Ïù∏ÏÇ¨ÌïòÏÑ∏Ïöî.\n\n[Î∞∞Í≤ΩÏßÄÏãù]\n{context}\n\n[ÏÇ¨Ïö©Ïûê ÏßàÎ¨∏] : {user_input}\n[ÎãµÎ≥Ä] :",
    "vectorization_status_title": "{method} Î≤°ÌÑ∞Ìôî ÏÉÅÌÉú ÏöîÏïΩ",
    "total_files": " * Ï¥ù ÌååÏùº Ïàò: {count}",
    "total_chunks": " * Ï¥ù Ï≤≠ÌÅ¨ Ïàò: {count}",
    "total_entities": " * Ï¥ù ÏóîÌã∞Ìã∞ Ïàò: {count}",
    "unique_files": " * Í≥†Ïú† ÌååÏùº Ïàò: {count}",
    "vectorized_files": " * Î≤°ÌÑ∞ÌôîÎêú ÌååÏùº:",
    "status_separator": "##############################",
    "model_loaded": "Î™®Îç∏ Î°úÎìú ÏôÑÎ£å",
    "overall_progress": "Ï†ÑÏ≤¥ ÏßÑÌñâ ÏÉÅÌô©",
    "model_loading_progress": "<br><br><br><h3>Î™®Îç∏ Î°úÎî© ÏßÑÌñâ ÏÉÅÌô©</h3>",
    "select_vector_search_method": "Î≤°ÌÑ∞ Í≤ÄÏÉâ Î∞©Î≤ï ÏÑ†ÌÉù",
    "milvus_connection_failed": "Failed to connect to Milvus: {error}",
    "select_login_method": "Î°úÍ∑∏Ïù∏ Î∞©Ïãù ÏÑ†ÌÉù",
    "watsonx_discovery_config_page": "watsonx Discovery ÏÑ§Ï†ï",
    "test_watsonx_discovery_connection": "watsonx Discovery Ïó∞Í≤∞ ÌÖåÏä§Ìä∏",
    "watsonx_discovery_connection_success": "watsonx Discovery Ïó∞Í≤∞ ÏÑ±Í≥µ",
    "watsonx_discovery_connection_failed": "watsonx Discovery Ïó∞Í≤∞ Ïã§Ìå®",
    "watsonx_discovery_test_start": "watsonx Discovery Ïó∞Í≤∞ ÌÖåÏä§Ìä∏Î•º ÏãúÏûëÌï©ÎãàÎã§...",
    "indexing_test_document": "ÌÖåÏä§Ìä∏ Î¨∏ÏÑú Ïù∏Îç±Ïã± Ï§ë...",
    "document_indexing_success": "Î¨∏ÏÑú Ïù∏Îç±Ïã± ÏÑ±Í≥µ. Î¨∏ÏÑú ID: {doc_id}",
    "document_indexing_error": "Î¨∏ÏÑú Ïù∏Îç±Ïã± Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "checking_document_processing": "Î¨∏ÏÑú Ï≤òÎ¶¨ Í≤∞Í≥º ÌôïÏù∏ Ï§ë...",
    "ml_field_found": "ML ÌïÑÎìú Î∞úÍ≤¨. Î¨∏ÏÑú Î∂ÑÏÑù Ï§ë...",
    "ml_field_analysis_result": "ML ÌïÑÎìú Î∂ÑÏÑù Í≤∞Í≥º:",
    "document_processing_timeout": "Î¨∏ÏÑú Ï≤òÎ¶¨ ÏãúÍ∞Ñ Ï¥àÍ≥º: {error}",
    "watsonx_discovery_test_error": "watsonx Discovery ÌÖåÏä§Ìä∏ Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "deleting_test_document": "ÌÖåÏä§Ìä∏ Î¨∏ÏÑú ÏÇ≠Ï†ú Ï§ë...",
    "document_deletion_success": "Î¨∏ÏÑú ID {doc_id}Í∞Ä ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.",
    "document_deletion_error": "Î¨∏ÏÑú ÏÇ≠Ï†ú Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "document_deletion_exception": "Î¨∏ÏÑú ÏÇ≠Ï†ú Ï§ë ÏòàÏô∏ Î∞úÏÉù: {error}",
    "document_wait_error": "Î¨∏ÏÑú ÎåÄÍ∏∞ Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "document_processing_wait": "Î¨∏ÏÑú Ï≤òÎ¶¨ ÎåÄÍ∏∞ Ï§ë... (ÌïÑÎìú: {field}, ÏãúÎèÑ: {attempt}/{max_attempts})",
    "document_field_found": "Î¨∏ÏÑúÏóêÏÑú {field} ÌïÑÎìúÎ•º Ï∞æÏïòÏäµÎãàÎã§.",
    "ml_field_not_found": "ML ÌïÑÎìúÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.",
    "watsonx_discovery_server_url": "watsonx Discovery ÏÑúÎ≤Ñ URL",
    "watsonx_discovery_api_key": "watsonx Discovery API ÌÇ§",
    "watsonx_discovery_pem_file": "PEM ÌååÏùº (ÏÑ†ÌÉùÏÇ¨Ìï≠)",
    "watsonx_discovery_index_name": "Ïù∏Îç±Ïä§ Ïù¥Î¶Ñ",
    "watsonx_discovery_text_expanding": "ÌÖçÏä§Ìä∏ ÌôïÏû• ÏÇ¨Ïö©",
    "watsonx_discovery_index_exists": "Ïù∏Îç±Ïä§ '{index_name}'Ïù¥(Í∞Ä) Ï°¥Ïû¨Ìï©ÎãàÎã§.",
    "watsonx_discovery_index_not_found": "Ïù∏Îç±Ïä§ '{index_name}'ÏùÑ(Î•º) Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. Ïù∏Îç±Ïä§ Ïù¥Î¶ÑÏùÑ ÌôïÏù∏ÌïòÍ≥† Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.",
    "watsonx_discovery_ml_pipeline_exists": "ML ÌååÏù¥ÌîÑÎùºÏù∏ '{pipeline_name}'Ïù¥(Í∞Ä) Ï°¥Ïû¨ÌïòÎ©∞ Ïò¨Î∞îÎ•¥Í≤å Íµ¨ÏÑ±ÎêòÏñ¥ ÏûàÏäµÎãàÎã§.",
    "watsonx_discovery_ml_pipeline_not_found": "ÌååÏù¥ÌîÑÎùºÏù∏ '{pipeline_name}'Ïù¥(Í∞Ä) Ï°¥Ïû¨ÌïòÏßÄÎßå ML ÌîÑÎ°úÏÑ∏ÏÑúÎ•º Ìè¨Ìï®ÌïòÍ≥† ÏûàÏßÄ ÏïäÏäµÎãàÎã§.",
    "watsonx_discovery_pipeline_not_found": "ÌååÏù¥ÌîÑÎùºÏù∏ '{pipeline_name}'ÏùÑ(Î•º) Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. ÌååÏù¥ÌîÑÎùºÏù∏ Íµ¨ÏÑ±ÏùÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.",
    "watsonx_discovery_content_ml_mapping_exists": "'content' ÌïÑÎìúÏóê ÎåÄÌïú ML ÌïÑÎìú Îß§ÌïëÏù¥ Ï°¥Ïû¨Ìï©ÎãàÎã§.",
    "watsonx_discovery_content_ml_mapping_not_found": "'content' ÌïÑÎìúÏóê ÎåÄÌïú ML ÌïÑÎìú Îß§ÌïëÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. Ïù∏Îç±Ïä§ Îß§Ìïë Íµ¨ÏÑ±ÏùÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.",
    "milvus_status_error": "Milvus ÏÉÅÌÉúÎ•º ÌôïÏù∏ÌïòÎäî Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "document_indexing_exception": "Î¨∏ÏÑú Ïù∏Îç±Ïã± Ï§ë ÏòàÏô∏ Î∞úÏÉù: {error}",
    "multiple_models_found": "Ïó¨Îü¨ Î™®Îç∏Ïù¥ Î∞úÍ≤¨ÎêòÏóàÏäµÎãàÎã§. Î™®Îç∏ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî:",
    "select_model": "Î™®Îç∏ ÏÑ†ÌÉù",
    "selected_model_info": "ÏÑ†ÌÉùÎêú Î™®Îç∏ Ï†ïÎ≥¥:\n  ÌÉÄÏûÖ: {type}\n  ID: {id}\n  ÏûÑÎ≤†Îî© ÌïÑÎìú: {field}",
    "model_ids_found": "Î∞úÍ≤¨Îêú Î™®Îç∏ ID: {ids}",
    "model_info_found": "Î∞úÍ≤¨Îêú Î™®Îç∏ - ÌÉÄÏûÖ: {type}, ID: {id}",
    "no_model_selected": "Î™®Îç∏Ïù¥ ÏÑ†ÌÉùÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.",
    "single_model_found": "Îã®Ïùº Î™®Îç∏ Î∞úÍ≤¨ - Ïú†Ìòï: {type}, ID: {id}",
    "no_models_found": "Î™®Îç∏ÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.",
    "connection_failed_log": "Ïô∏Î∂Ä Î≤°ÌÑ∞ ÏÑúÎ≤ÑÏóê Ïó∞Í≤∞Ïù¥ Ïã§Ìå®ÌñàÏäµÎãàÎã§. ÏÑ§Ï†ïÏùÑ ÌôïÏù∏Ìï¥ Ï£ºÏÑ∏Ïöî.",
    "test_milvus_connection": "Milvus Ïó∞Í≤∞ ÌÖåÏä§Ìä∏",
    "faiss_status": "FAISS Î≤°ÌÑ∞ Í≤ÄÏÉâ ÏÉÅÌÉú",
    "chunks_per_file": "Í∞Å ÌååÏùºÎ≥Ñ Ï≤≠ÌÅ¨ Ïàò:",
    "file_chunks": "- {file}: {count}Í∞ú Ï≤≠ÌÅ¨",
    "faiss_index_info": "FAISS Ïù∏Îç±Ïä§ Ï†ïÎ≥¥:",
    "index_size": "Ïù∏Îç±Ïä§ ÌÅ¨Í∏∞: {size}",
    "index_dimension": "Ïù∏Îç±Ïä§ Ï∞®Ïõê: {dimension}",
    "faiss_index_not_created": "FAISS Ïù∏Îç±Ïä§Í∞Ä ÏïÑÏßÅ ÏÉùÏÑ±ÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.",
    "faiss_data_not_found": "Ïò§Î•ò: FAISS Í¥ÄÎ†® Îç∞Ïù¥ÌÑ∞Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. {error}",
    "faiss_logging_error": "FAISS ÏÉÅÌÉú Î°úÍπÖ Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "collection_details": "Ïª¨Î†âÏÖò '{name}'Ïùò ÏÉÅÏÑ∏ Ï†ïÎ≥¥:",
    "schema_info": "1. Ïä§ÌÇ§Îßà Ï†ïÎ≥¥:",
    "description": "ÏÑ§Î™Ö: {desc}",
    "fields": "ÌïÑÎìú:",
    "field_info": "- Ïù¥Î¶Ñ: {name}, ÌÉÄÏûÖ: {type}, Ï£ºÌÇ§ Ïó¨Î∂Ä: {is_primary}",
    "basic_info": "2. Í∏∞Î≥∏ Ï†ïÎ≥¥:",
    "name": "Ïù¥Î¶Ñ: {name}",
    "is_empty": "ÎπÑÏñ¥ ÏûàÏùå: {empty}",
    "entity_count": "ÏóîÌã∞Ìã∞ Ïàò: {count}",
    "primary_key_info": "3. Ï£ºÌÇ§ Ï†ïÎ≥¥:",
    "no_primary_key": "Ï£ºÌÇ§Í∞Ä ÏóÜÏäµÎãàÎã§",
    "partition_info": "4. ÌååÌã∞ÏÖò Ï†ïÎ≥¥:",
    "partition_details": "- Ïù¥Î¶Ñ: {name}, ÏÑ§Î™Ö: {desc}",
    "index_info": "5. Ïù∏Îç±Ïä§ Ï†ïÎ≥¥:",
    "field_name": "ÌïÑÎìú Ïù¥Î¶Ñ: {name}",
    "index_name": "Ïù∏Îç±Ïä§ Ïù¥Î¶Ñ: {name}",
    "index_type": "Ïù∏Îç±Ïä§ ÌÉÄÏûÖ: {type}",
    "metric_type": "Î©îÌä∏Î¶≠ ÌÉÄÏûÖ: {type}",
    "additional_params": "Ï∂îÍ∞Ä ÌååÎùºÎØ∏ÌÑ∞: {params}",
    "no_index": "Ïù∏Îç±Ïä§Í∞Ä ÏóÜÏäµÎãàÎã§",
    "load_state": "6. Ïª¨Î†âÏÖò Î°úÎìú ÏÉÅÌÉú: {state}",
    "faiss_index_initialized": "FAISS Ïù∏Îç±Ïä§Í∞Ä Ï∞®Ïõê {dimension}ÏúºÎ°ú Ï¥àÍ∏∞ÌôîÎêòÏóàÏäµÎãàÎã§",
    "vectors_added_to_faiss": "ÌååÏùº {file_name}Ïóê ÎåÄÌï¥ {count}Í∞úÏùò Î≤°ÌÑ∞Í∞Ä FAISS Ïù∏Îç±Ïä§Ïóê Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§",
    "faiss_index_empty": "FAISS Ïù∏Îç±Ïä§Í∞Ä ÎπÑÏñ¥ÏûàÍ±∞ÎÇò Ï¥àÍ∏∞ÌôîÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§",
    "file_not_found_in_index": "FAISS Ïù∏Îç±Ïä§ÏóêÏÑú ÌååÏùºÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§: {file_name}",
    "faiss_file_specific_search_not_supported": "FAISSÏóêÏÑúÎäî ÌäπÏ†ï ÌååÏùº Í≤ÄÏÉâÏù¥ ÏßÅÏ†ë ÏßÄÏõêÎêòÏßÄ ÏïäÏäµÎãàÎã§. ÏùºÎ∞ò Í≤ÄÏÉâÏùÑ ÏàòÌñâÌïòÍ≥† Í≤∞Í≥ºÎ•º ÌïÑÌÑ∞ÎßÅÌï©ÎãàÎã§.",
    "processing_file": "ÌååÏùº Ï≤òÎ¶¨ Ï§ë: {file_name}",
    "extracted_text_length": "Ï∂îÏ∂úÎêú ÌÖçÏä§Ìä∏ Í∏∏Ïù¥: {length}",
    "total_words_in_document": "Î¨∏ÏÑúÏùò Ï¥ù Îã®Ïñ¥ Ïàò: {word_count}",
    "number_of_chunks_created": "ÏÉùÏÑ±Îêú Ï≤≠ÌÅ¨ Ïàò: {chunk_count}",
    "number_of_chunks_after_splitting": "Î∂ÑÌï† ÌõÑ Ï≤≠ÌÅ¨ Ïàò: {chunk_count}",
    "number_of_chunk_vectors": "Ï≤≠ÌÅ¨ Î≤°ÌÑ∞ Ïàò: {vector_count}",
    "extracted_text_sample": "PDFÏóêÏÑú Ï∂îÏ∂úÌïú ÌÖçÏä§Ìä∏ (Ï≤òÏùå 100Ïûê): {text_sample}",
    "faiss_index_not_initialized": "FAISS Ïù∏Îç±Ïä§Í∞Ä Ï¥àÍ∏∞ÌôîÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§",
    "total_vectors_in_index": "FAISS Ïù∏Îç±Ïä§Ïùò Ï¥ù Î≤°ÌÑ∞ Ïàò: {count}",
    "vector_dimension": "Î≤°ÌÑ∞ Ï∞®Ïõê: {dimension}",
    "number_of_clusters": "ÌÅ¥Îü¨Ïä§ÌÑ∞ Ïàò (IVF Ïù∏Îç±Ïä§Ïùò Í≤ΩÏö∞): {count}",
    "unique_files_in_index": "Ïù∏Îç±Ïä§ ÎÇ¥ Í≥†Ïú† ÌååÏùº Ïàò: {count}",
    "faiss_index_type": "FAISS Ïù∏Îç±Ïä§ ÌÉÄÏûÖ: {type}",
    "index_flat_l2_info": "Ïù¥Îäî L2 Í±∞Î¶¨Î•º ÏÇ¨Ïö©ÌïòÎäî ÌîåÎû´ Ïù∏Îç±Ïä§ÏûÖÎãàÎã§",
    "index_ivf_flat_info": "Ïù¥Îäî {nlist}Í∞úÏùò Î¶¨Ïä§Ìä∏ÏôÄ nprobeÍ∞Ä {nprobe}Î°ú ÏÑ§Ï†ïÎêú IVF ÌîåÎû´ Ïù∏Îç±Ïä§ÏûÖÎãàÎã§",
    "index_ivf_pq_info": "Ïù¥Îäî {nlist}Í∞úÏùò Î¶¨Ïä§Ìä∏, nprobeÍ∞Ä {nprobe}Î°ú ÏÑ§Ï†ïÎêòÏóàÏúºÎ©∞, {M}Í∞úÏùò ÏÑúÎ∏åÏøºÌÑ∞ÎÇòÏù¥Ï†ÄÏôÄ ÏÑúÎ∏åÏøºÌÑ∞ÎÇòÏù¥Ï†ÄÎãπ {nbits}ÎπÑÌä∏Î•º ÏÇ¨Ïö©ÌïòÎäî IVF PQ Ïù∏Îç±Ïä§ÏûÖÎãàÎã§",
    "estimated_memory_usage": "Ï∂îÏ†ï Î©îÎ™®Î¶¨ ÏÇ¨Ïö©Îüâ: {usage}",
    "no_text_extracted": "ÌååÏùºÏóêÏÑú ÌÖçÏä§Ìä∏Î•º Ï∂îÏ∂úÌï† Ïàò ÏóÜÏäµÎãàÎã§: {file_name}",
    "file_processing_failed": "ÌååÏùº Ï≤òÎ¶¨Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§: {file_name}",
    "watsonx_discovery_config_info": "Í≥ÑÏÜç ÏßÑÌñâÌïòÍ∏∞ Ï†ÑÏóê watsonx DiscoveryÏóêÏÑú Îã§Ïùå Îã®Í≥ÑÎ•º ÏôÑÎ£åÌñàÎäîÏßÄ ÌôïÏù∏Ìï¥ Ï£ºÏÑ∏Ïöî:\n\n1. ML ÌååÏù¥ÌîÑÎùºÏù∏ ÏÑ§Ï†ï:\n\n   ‚Ä¢ ÏÉàÎ°úÏö¥ ML ÌååÏù¥ÌîÑÎùºÏù∏ÏùÑ ÏÉùÏÑ±ÌïòÍ±∞ÎÇò Í∏∞Ï°¥ ÌååÏù¥ÌîÑÎùºÏù∏ÏùÑ ÏÇ¨Ïö©ÌïòÏÑ∏Ïöî.\n\n   ‚Ä¢ ÌååÏù¥ÌîÑÎùºÏù∏Ïù¥ Î¨∏ÏÑúÎ•º Ï≤òÎ¶¨ÌïòÎèÑÎ°ù Ïò¨Î∞îÎ•¥Í≤å Íµ¨ÏÑ±ÎêòÏóàÎäîÏßÄ ÌôïÏù∏ÌïòÏÑ∏Ïöî.\n\n2. ÌïÑÎìú Îß§Ìïë Íµ¨ÏÑ±:\n\n   ‚Ä¢ ÌååÏù¥ÌîÑÎùºÏù∏ÏóêÏÑú Î¨∏ÏÑúÏùò 'content' ÌïÑÎìúÎ•º Îß§ÌïëÌïòÏÑ∏Ïöî.\n\n   ‚Ä¢ Ïù¥ Îß§ÌïëÏùÄ ML Î™®Îç∏Ïù¥ Ïò¨Î∞îÎ•∏ Îç∞Ïù¥ÌÑ∞Î•º Ï≤òÎ¶¨ÌïòÎäî Îç∞ Ï§ëÏöîÌï©ÎãàÎã§.\n\n3. ÌååÏù¥ÌîÑÎùºÏù∏ ÏûëÎèô ÌôïÏù∏:\n\n   ‚Ä¢ ÌÖåÏä§Ìä∏ Î¨∏ÏÑúÎ•º ÌååÏù¥ÌîÑÎùºÏù∏Ïóê ÌÜµÍ≥ºÏãúÏºú Ïò¨Î∞îÎ•¥Í≤å ÏûëÎèôÌïòÎäîÏßÄ ÌôïÏù∏ÌïòÏÑ∏Ïöî.\n\n   ‚Ä¢ 'content' ÌïÑÎìúÍ∞Ä Ï†úÎåÄÎ°ú Ï≤òÎ¶¨ÎêòÍ≥† Í∞ïÌôîÎêòÎäîÏßÄ ÌôïÏù∏ÌïòÏÑ∏Ïöî.\n\nÏù¥ Îã®Í≥ÑÎì§ÏùÑ ÏôÑÎ£åÌïú ÌõÑÏóê Ïù¥ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖòÏóêÏÑú Íµ¨ÏÑ±ÏùÑ ÏßÑÌñâÌï† Ïàò ÏûàÏäµÎãàÎã§.",
    "embedding_model_info": "ÏûÑÎ≤†Îî© Î™®Îç∏ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî. watsonx DiscoveryÏùò Í≤ΩÏö∞, Ïï± ÎÇ¥Î∂ÄÏóêÏÑú ÏûÑÎ≤†Îî© Î™®Îç∏Ïù¥ ÏÇ¨Ïö©ÎêòÏßÄ ÏïäÏäµÎãàÎã§.",
    "watsonx_discovery_doc_count": "Ïù∏Îç±Ïä§ ÎÇ¥ Ï¥ù Î¨∏ÏÑú Ïàò: {count}",
    "watsonx_discovery_fields": "Ïù∏Îç±Ïä§ ÌïÑÎìú:",
    "watsonx_discovery_status_error": "Watson Discovery ÏÉÅÌÉú ÌôïÏù∏ Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "bulk_indexing_success": "'{file_name}' ÌååÏùºÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïù∏Îç±Ïã±ÎêòÏóàÏäµÎãàÎã§.",
    "watsonx_discovery_file_counts": "ÌååÏùºÎ≥Ñ Î¨∏ÏÑú Ïàò:",
    "watsonx_discovery_client_error": "Watson Discovery ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ Ïò§Î•ò: {error}",
    "watsonx_discovery_config_error": "Watson Discovery ÏÑ§Ï†ï Ïò§Î•ò: {error}",
    "watsonx_discovery_search_error": "Watson Discovery Í≤ÄÏÉâ Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "select_login_mode": "Î°úÍ∑∏Ïù∏ Î™®Îìú ÏÑ†ÌÉù",
    "login_mode_general": "ÏùºÎ∞ò",
    "login_mode_prompt_template": "ÌîÑÎ°¨ÌîÑÌä∏ÌÖúÌîåÎ¶ø",
    "prompt_template_login_title": "ÌîÑÎ°¨ÌîÑÌä∏ ÌÖúÌîåÎ¶ø Î°úÍ∑∏Ïù∏",
    "stream_endpoint_url": "Ïä§Ìä∏Î¶º ÏóîÎìúÌè¨Ïù∏Ìä∏ URL",
    "vector_search_params": "Î≤°ÌÑ∞ Í≤ÄÏÉâ Í≤∞Í≥º ÌååÎùºÎØ∏ÌÑ∞(Î≥ÄÏàòÏù¥Î¶Ñ)",
    "user_input_params": "ÏÇ¨Ïö©Ïûê ÏûÖÎ†• ÌååÎùºÎØ∏ÌÑ∞(Î≥ÄÏàòÏù¥Î¶Ñ)",
    "pipeline_ml_field_log": "\nÌååÏù¥ÌîÑÎùºÏù∏: {pipeline_name}",
    "elser_model_ml_field_log": "ELSER Î™®Îç∏ (text_expanding):",
    "model_id_ml_field_log": "  Model ID: {model_id}",
    "keyword_count_ml_field_log": "  ÌÇ§ÏõåÎìú Ïàò: {count}",
    "top_10_keywords_ml_field_log": "  ÏÉÅÏúÑ 10Í∞ú ÌÇ§ÏõåÎìú:",
    "keyword_score_ml_field_log": "    {keyword}: {score:.4f}",
    "embedding_model_ml_field_log": "ÏûÑÎ≤†Îî© Î™®Îç∏ (text_embedding):",
    "vector_dimension_ml_field_log": "  Î≤°ÌÑ∞ Ï∞®Ïõê: {dimension}",
    "vector_sample_ml_field_log": "  Î≤°ÌÑ∞ ÏÉòÌîå (Ï≤òÏùå 5Í∞ú Í∞í):",
    "vector_value_ml_field_log": "    {value:.6f}",
    "unknown_model_type_ml_field_log": "Ïïå Ïàò ÏóÜÎäî Î™®Îç∏ ÌÉÄÏûÖ:",
    "predicted_value_type_ml_field_log": "  ÏòàÏ∏° Í∞í ÌÉÄÏûÖ: {value_type}",
    "no_model_info_ml_field_log": "\nÎ™®Îç∏ Ï†ïÎ≥¥Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.",
    "ml_field_content_ml_field_log": "ML ÌïÑÎìú ÎÇ¥Ïö©: {content}",
    "debug_model_info_ml_field_log": "Debug - model_info: {model_info}",
    "pem_file_uploaded_and_saved": "PEM ÌååÏùºÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏóÖÎ°úÎìúÎêòÏóàÏäµÎãàÎã§.",
    "pem_file_deletion_error": "PEM ÌååÏùº ÏÇ≠Ï†ú Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "unsupported_file_format": "ÏßÄÏõêÎêòÏßÄ ÏïäÎäî ÌååÏùº ÌòïÏãù: {format}",
    "text_extraction_error": "{file_name}ÏóêÏÑú ÌÖçÏä§Ìä∏ Ï∂îÏ∂ú Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "pdf_page_extraction_error": "PDF ÌéòÏù¥ÏßÄ {page_num}ÏóêÏÑú ÌÖçÏä§Ìä∏ Ï∂îÏ∂ú Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "pdf_reading_error": "PDF ÌååÏùº ÏùΩÍ∏∞ Ïò§Î•ò: {error}",
    "docx_reading_error": "DOCX ÌååÏùº ÏùΩÍ∏∞ Ïò§Î•ò: {error}",
    "excel_reading_error": "Excel ÌååÏùº ÏùΩÍ∏∞ Ïò§Î•ò: {error}",
    "powerpoint_reading_error": "PowerPoint ÌååÏùº ÏùΩÍ∏∞ Ïò§Î•ò: {error}",
    "image_reading_error": "Ïù¥ÎØ∏ÏßÄ ÌååÏùº ÏùΩÍ∏∞ Ïò§Î•ò: {error}",
    "missing_settings": "Îã§Ïùå ÏÑ§Ï†ïÏù¥ ÎàÑÎùΩÎêòÏóàÍ±∞ÎÇò Ïú†Ìö®ÌïòÏßÄ ÏïäÏäµÎãàÎã§: {settings}",
    "all_settings_complete": "Î™®Îì† ÏÑ§Ï†ïÏù¥ ÏôÑÎ£åÎêòÍ≥† Ïú†Ìö®Ìï©ÎãàÎã§.",
    "apikey": "API ÌÇ§",
    "bearer": "Bearer ÌÜ†ÌÅ∞",
    "selected_model": "ÏÑ†ÌÉùÎêú Î™®Îç∏",
    "valid_chunk_size": "Ïú†Ìö®Ìïú Ï≤≠ÌÅ¨ ÌÅ¨Í∏∞",
    "valid_overlap_size": "Ïú†Ìö®Ìïú Ïò§Î≤ÑÎû© ÌÅ¨Í∏∞",
    "overlap_size_smaller": "Ï≤≠ÌÅ¨ ÌÅ¨Í∏∞Î≥¥Îã§ ÏûëÏùÄ Ïò§Î≤ÑÎû© ÌÅ¨Í∏∞",
    "watsonx_ai_availability": "WatsonX.AI Í∞ÄÏö©ÏÑ±",
    "milvus_connection_test": "Milvus Ïó∞Í≤∞ ÌÖåÏä§Ìä∏",
    "watson_discovery_server_url": "Watson Discovery ÏÑúÎ≤Ñ URL",
    "watson_discovery_api_key": "Watson Discovery API ÌÇ§",
    "watson_discovery_index_name": "Watson Discovery Ïù∏Îç±Ïä§ Ïù¥Î¶Ñ",
    "watson_discovery_text_embedding_type": "Watson Discovery ÌÖçÏä§Ìä∏ ÏûÑÎ≤†Îî© Ïú†Ìòï",
    "watson_discovery_connection_test": "Watson Discovery Ïó∞Í≤∞ ÌÖåÏä§Ìä∏",
    "valid_vector_search_method": "Ïú†Ìö®Ìïú Î≤°ÌÑ∞ Í≤ÄÏÉâ Î∞©Î≤ï",
    "watsonx_general_request_failed": "WatsonX.AI ÏùºÎ∞ò Î™®Îìú ÏöîÏ≤≠ Ïã§Ìå®. ÏÉÅÌÉú ÏΩîÎìú: {status_code}",
    "watsonx_general_request_error": "WatsonX.AI ÏùºÎ∞ò Î™®Îìú ÏöîÏ≤≠ Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "watsonx_prompt_template_connection_success": "WatsonX.AI ÌîÑÎ°¨ÌîÑÌä∏ ÌÖúÌîåÎ¶ø Î™®Îìú Ïó∞Í≤∞ ÏÑ±Í≥µ",
    "watsonx_prompt_template_request_failed": "WatsonX.AI ÌîÑÎ°¨ÌîÑÌä∏ ÌÖúÌîåÎ¶ø Î™®Îìú ÏöîÏ≤≠ Ïã§Ìå®. ÏÉÅÌÉú ÏΩîÎìú: {status_code}",
    "watsonx_prompt_template_request_error": "WatsonX.AI ÌîÑÎ°¨ÌîÑÌä∏ ÌÖúÌîåÎ¶ø Î™®Îìú ÏöîÏ≤≠ Ï§ë Ïò§Î•ò Î∞úÏÉù: {error}",
    "format_error": "Ìè¨Îß∑ Ïò§Î•ò: {message_key}Ïóê ÌïÑÏöîÌïú ÌÇ§ {missing_key}Í∞Ä ÎàÑÎùΩÎêòÏóàÏäµÎãàÎã§.",
    "message_not_found": "Î©îÏãúÏßÄÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. Ïñ∏Ïñ¥: {lang}, ÌÇ§: {message_key}",
    "milvus_insert_count_mismatch": "ÏÇΩÏûÖÎêú ÏóîÌã∞Ìã∞ ÏàòÍ∞Ä ÏòàÏÉÅÍ≥º Îã§Î¶ÖÎãàÎã§. ÏòàÏÉÅ: {expected}, Ïã§Ï†ú: {actual}",
    "select_option": "ÏÑ†ÌÉùÌïòÏÑ∏Ïöî"    
  }
}